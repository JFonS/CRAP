global car;

timeline MoveCarForward()
{
	key <<0.5>> Elastic { 
		car.Position -> car.Position + car.p * 2;
	}
	
	key <<1.0>> Elastic {
		car.Position -> car.Position;
	}
}

timeline MoveCarBackwards()
{
	i = 0;
	
	while (i <= 1) {
		car.r = car.r.zxy;
		key<<i>> {
			car.Rotation -> car.r;
		}
		i = i + 1.0;
	}
	
	key <<1.0>> Elastic {
		car.p = car.p.yzx; 
		car.Position -> car.p - vec3(vec2(0),10);
	}
}

timeline Animate()
{
	if (car.advance)
	{
		MoveCarForward <<2.0>>();
		key <<2.0>> { Animate<<1.0>>(); }
	}
	else
	{
		MoveCarBackwards <<1.0>>();
		key <<1.0>> { Animate<<1.0>>(); }
	}
	car.advance = not car.advance;
}

timeline Main()
{	
	car = new Car;
	
	car.Position = vec3(1.5,0,0);
	car.Rotation = vec3(0,0,90);
	
	car.advance = false;
	
	car.p = car.Position;
	car.r = car.Rotation;
	
	Animate [[1]]();
}
