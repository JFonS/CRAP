
prefab Stone()
{
	this.Primitive = "Sphere";
	this.Color = vec3(rand(), rand(), rand()) * 0.5;
	this.Scale = vec3(rand());
}

prefab Window()
{
	this.Primitive = "Cube";
	this.Color = vec3(0.6, 0.6, 1.0);
	this.Scale = vec3(0.6, 0.4, 0.55);
}

prefab CarLight()
{
	this.Primitive = "Cube";
	this.Color = vec3(0.8, 0.6, 0.0);
	this.Scale = vec3(0.2);
}

prefab WindowF()
{
	this.Primitive = "Cube";
	this.Color = vec3(0.6, 0.6, 1.0);
	this.Scale = vec3(0.45, 0.35, 0.9);
}

timeline RotWheel(wheel) 
{ 
	wheel.Rotation.z = 0.0; 
	key<<1.0>> 
	{ 
		wheel.Rotation.z -> -360.0; 
		RotWheel<<1.0>>(wheel); 
	} 
}

prefab Wheel()
{
	this.Color = vec3(0.0);
	this.Scale = vec3(0.5);
	this.Primitive = "Cylinder"; 
	
	this.Middle = new Object();
	this.Middle.Parent = this;
	this.Middle.Primitive = "Cube";
	this.Middle.Scale = vec3(0.2, 0.2, 0.6);
	this.Middle.Position.z = 0.5;
	this.Middle.Color = vec3(1.0);
	RotWheel<<1.0>>(this);
}

prefab Car()
{
	this.UpperPart = new Object();
	this.UpperPart.Color = carColor;
	this.UpperPart.Parent = this;
	this.UpperPart.Primitive = "Cube";
	this.UpperPart.Scale = vec3(1.5, 1.0, 1.0);

	this.LowerPart = new Object();
	this.LowerPart.Color = carColor;
	this.LowerPart.Parent = this;
	this.LowerPart.Primitive = "Cube";
	this.LowerPart.Scale = vec3(2.0, 0.5, 1.0);
	this.LowerPart.Position.y = -0.5;

	this.Window1 = new Window();
	this.Window1.Parent = this; 
	this.Window1.Position = vec3(0.7, 0.45, 0.5);
	this.Window2 = new Window();
	this.Window2.Parent = this; 
	this.Window2.Position = vec3(-0.7, 0.45, 0.5);
	this.Window3 = new Window();
	this.Window3.Parent = this; 
	this.Window3.Position = vec3(0.7, 0.45, -0.5);
	this.Window4 = new Window();
	this.Window4.Parent = this; 
	this.Window4.Position = vec3(-0.7, 0.45, -0.5);
	this.Window5 = new WindowF();
	this.Window5.Parent = this; 
	this.Window5.Position = vec3(1.1, 0.45, 0.0);
	this.Window6 = new WindowF();
	this.Window6.Parent = this; 
	this.Window6.Position = vec3(-1.1, 0.45, 0.0);

	this.CLight0 = new CarLight();
	this.CLight0.Parent = this;
	this.CLight0.Position = vec3(1.9, -0.3, 0.6);
	this.CLight1 = new CarLight();
	this.CLight1.Parent = this;
	this.CLight1.Position = vec3(1.9, -0.3, -0.6);
	this.Matricula = new Object();
	this.Matricula.Parent = this;
	this.Matricula.Primitive = "Cube";
	this.Matricula.Scale = vec3(0.2, 0.1, 0.5);
	this.Matricula.Position = vec3(1.9, -0.7, 0.0);

	this.wheel0 = new Wheel();
	this.wheel0.Parent = this;
	this.wheel0.Position = vec3(-1,-1,-1.25);

	this.wheel1 = new Wheel();
	this.wheel1.Parent = this;
	this.wheel1.Position = vec3(-1,-1,0.75);

	this.wheel2 = new Wheel();
	this.wheel2.Parent = this;
	this.wheel2.Position = vec3(1,-1,-1.25);

	this.wheel3 = new Wheel();
	this.wheel3.Parent = this;
	this.wheel3.Position = vec3(1,-1,0.75);

	key <<3.6>> { JumpCar<<0.8>>(this, 0.0); } 
	key <<6.5>> { JumpCar<<0.8>>(this, 5.5); } 
	key <<6.5>> { Spin<<0.8>>(this); } 
	key <<9.0>> { Fall<<0.8>>(this, 0.0, false); } 
	key <<11.0>> { Caballito<<0.8>>(this, 30.0); } 
	key <<13.0>> { Caballito<<0.8>>(this, 0.0); } 
	key <<16.0>> { StretchCar<<1.0>>(this, 0.1); } 
	key <<19.0>> { StretchCar<<1.0>>(this, 1.0); } 
	key <<24.0>> { StopAndFlip<<1.0>>(this); } 
	key <<0.0>> { MoveCar<<1.0>>(this); }
}

timeline StopAndFlip(obj)
{
	key<<0.0>> { JumpCar<<0.8>>(obj, 0.0); }
	key<<0.0>> { Roll<<0.4>>(obj); }
	key<<0.4>> { Roll<<0.4>>(obj); }
}

timeline Roll(car)
{
	car.Rotation.z = 0.0;
        key<<1.0>> { car.Rotation.z -> 360.0; }
}

timeline Spin(car)
{
	car.Rotation.x = 0.0;
        key<<1.0>> { car.Rotation.x -> 360.0; }
}

timeline Caballito(obj, angle)
{
	key<<1.0>> Sine
        {
                obj.Rotation.z -> angle;
        }
}

timeline UnVisible(obj) { key<<0.0>>{ obj.Visible = false; } }
timeline Fall(obj, finalY, invisibleAtEnd)
{
  	obj.Visible = true;	
	key<<1.0>> BounceOut
	{
		obj.Position.y -> finalY;
		if (invisibleAtEnd) { UnVisible[[1.0]](obj); }
	}
}

timeline StretchCar(car, finalScale)
{
	key<<1.0>> BounceOut { car.Scale.z -> finalScale; }
}

timeline JumpCar(car, finalY)
{
	key<<0.5>> Sine { car.Position.y -> 10.0; }
	key<<1.0>> SineIn { car.Position.y -> finalY; }
}

timeline MoveCar(car)
{
	key <<1.0>> { MoveCar<<1.0>>(car); }
}

timeline MoveBack(obj)
{
	key <<1.0>>{ obj.Position.x -> obj.Position.x - 20.0; MoveBack<<1.0>>(obj); }
}

prefab CarAnimation()
{
	this.Primitive = "Empty";
	this.car = new Car();
	this.car.Parent = this;

        Light0.Position = vec3(10.0, 10.0, 10.0);
        Light0.Color = vec3(1.0, 1.0, 1.0);
        Light0.Range = 1000.0;
        Light0.Intensity = 500.0;
        Light0.Visible = true;
	

	this.obst1 = new Object();
	this.obst1.Parent = this;  
	this.obst1.Primitive = "Cube";
	this.obst1.Color = vec3(rand(), rand(), rand());
	this.obst1.Position = vec3(80, 1, 0);
	this.obst1.Scale = vec3(2.0, 2.9, 2.0);
	key <<0.0>> { MoveBack<<1.0>>(this.obst1); }

	this.obst2 = new Object();
	this.obst2.Parent = this;  
	this.obst2.Primitive = "Cube";
	this.obst2.Color = vec3(rand(), rand(), rand());
	this.obst2.Position = vec3(160, 1, 0);
	this.obst2.Scale = vec3(20.0, 2.9, 2.0);
	key <<0.0>> { MoveBack<<1.0>>(this.obst2); }

	col = vec3(rand(), rand(), rand());
	this.obst3 = new Object();
	this.obst3.Parent = this;
	this.obst3.Primitive = "Cube";
	this.obst3.Color = col;
	this.obst3.Position = vec3(350, 0, -1.5);
	this.obst3.Scale = vec3(20.0, 0.5, 0.5);
	key <<0.0>> { MoveBack<<1.0>>(this.obst3); }

	this.obst4 = new Object();
	this.obst4.Parent = this;
	this.obst4.Primitive = "Cube";
	this.obst4.Color = col; 
	this.obst4.Position = vec3(350, 0, 1.5);
	this.obst4.Scale = vec3(20.0, 0.5, 0.5);
	key <<0.0>> { MoveBack<<1.0>>(this.obst4); }

	n = 0;
	while (n < 3)
	{
		this.stone = new Stone();
		this.stone.Parent = this;
		this.stone.Visible = false; 
		this.stone.Position = vec3(-5.0, 10.0, 0.0);
		key <<10.0 + n>> { Fall<<0.8>>(this.stone, 0.0, true); }
		n = n + 1;
	}
}

prefab Confeti()
{
	this.Primitive = "Cube";
	this.Scale = vec3(1.0, 0.5, 1.0) * 0.3;
	this.Color = vec3(rand(), rand(), rand());
}

timeline Explode(conf, pos)
{	
	minRange = 0.0;
	key<<1.0>> { conf.Position.x -> pos.x + (rand()*2.0 + 1.0) * 5.0; }//vec2( (rand()+minRange)*2.0-1.0, (rand()+minRange)*2.0-1.0) * 5.0; }
}

timeline ThrowConfeti(pos)
{
	n = 0;
	while (n < 500)
	{
		confeti = new Confeti();
		confeti.Position = vec3(0, 3, 0);
		key <<0.0>> 
		{
			JumpCar<<2.0>>(confeti, 0.0); 
			Explode<<2.0>>(confeti, confeti.Position);
		}
		n = n + 1;
	}
}

timeline CreateCar(n)
{
	r = n%2; 
	g = (n:/2)%2;
	b = (n:/4)%2; 
	carColor = vec3(r,g,b);

	anims[n] = new CarAnimation();
        anims[n].Parent = anims;
        anims[n].Position = vec3(0, 0, n * -5);
}

global road;
global anims;
global carColor;

timeline Animation()
{
	anims = new Object();
	anims.Primitive = "Empty";
	
	road = new Object();
	road.Primitive = "Empty";

	n = 0;
	while (n < 100)
	{
		road["cube"..n] = new Object();
		road["cube"..n].Parent = road;  
		road["cube"..n].Primitive = "Cube";
		if (n%2 = 0) { road["cube"..n].Color = vec3(0.1); }
		else { road["cube"..n].Color = vec3(1.0); }
		road["cube"..n].Position = vec3(n*4-10, -1.7, 0.0);
		road["cube"..n].Scale = vec3(2.0, 0.2, 100.0);
		key<<0.0>> { MoveBack<<1.0>>(road["cube"..n]); }
		n = n + 1;
	}
	road["cubeF"] = new Object();
	road["cubeF"].Parent = road;  
	road["cubeF"].Primitive = "Cube";
	road["cubeF"].Color = vec3(1.0);
	road["cubeF"].Position = vec3(1390, -1.7, 0.0);
	road["cubeF"].Scale = vec3(1000.0, 0.2, 100.0);
	key<<0.0>> { MoveBack<<1.0>>(road["cubeF"]); }

	n = 0;
	numCars = 8;
	while (n < numCars)
	{
		key <<(1.0/numCars) * n * 3>>
		{
			CreateCar<<1.0>>(n);
		}
		n = n + 1;
	}
}

timeline Main()
{
	key<<0.0>> { Animation<<1.0>>(); }
	key[[3.0]] {  ThrowConfeti<<1.0>>( vec3(0) ); }
}
