global objects;


timeline Main()
{
    objects = new Cube;
    objects.Primitive  = "Empty";
    objects.Scale      = vec3(0.2);
    objects.Position.x = 0;
    objects.Position.y = -2;
    objects.Position.z = -8;

    GridSize = 30;

    i = 0; 
    while (i < GridSize) {
	    objects[i] = {};
            j = 0;
	    while (j < GridSize) {
		objects[i][j] = new Sphere;
		objects[i][j].Primitive  = "Cube";
		objects[i][j].Position.x = i - GridSize / 2.0;
		objects[i][j].Position.z = j - GridSize / 2.0;
		objects[i][j].Parent = objects;
		key << (i+j) / (GridSize+GridSize) >>
		{
			Loop<<1.0>>(objects[i][j], 3); 
		}
		j = j + 1;
	    }
	i = i + 1;
    }
    FlagUpDown<<1.0>>(objects, 3); 
}

timeline FlagUpDown(obj, amount)
{
    key <<0.5>> Sine { obj.Position.y ->  amount; }
    key <<1.0>> Sine { obj.Position.y -> -amount; }
	
    key <<1.0>> {  FlagUpDown<<1.0>>(obj, amount); }
}

timeline Loop(obj, amount)
{
    key <<0.5>> Sine { obj.Position.y ->  amount; }
    key <<1.0>> Sine { obj.Position.y -> -amount; }

    key <<0.75>> Back { obj.Scale -> vec3(1.0); }
    key <<0.25>> Back { obj.Scale -> vec3(0.5); }

    key <<0.5>> Linear { obj.Color -> vec3(1, 0, 0); }
    key <<1.0>> Linear { obj.Color -> vec3(0, 0, 1); }

    key <<1.0>>
    { 
       Loop<<1.0>>(obj, amount); 
    }
}
