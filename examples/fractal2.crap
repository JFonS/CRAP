global root;
global depth;

function CreateSphere(n, i, parent) {
	if ((i :/ 1) % 2 = 0) { x = 1; } else { x = -1; }
	if ((i :/ 2) % 2 = 0) { y = 1; } else { y = -1; }
	if ((i :/ 4) % 2 = 0) { z = 1; } else { z = -1; }

	if (x*y*z > 0) { n = n + 1; }
	if (n > depth) { n = 0; }
	c = new Sphere(n);

	c.Position = vec3(x,y,z) * 0.55;
	c.Scale = vec3(0.45);
	c.Parent = parent;
	c.Color = vec3((i :/ 1) % 2, (i :/ 2) % 2, (i :/ 4) % 2);
	return c;
}

prefab Sphere(n) {
	if (n <= 0) {
		this.Primitive = "Sphere";
		this.Color = vec3(rand(), rand(), rand());
	} else {
		this.Primitive = "Empty";

		i = 0;
		while (i < 8) {
			this[i] = CreateSphere(n-2,i,this);
			i = i + 1;
		}
	}
	
	if (n = depth) { return; }

	key [[n]] { Scale<<6>>(this); }
	
	if (n % 3 = 0) { this.Rotation.x = 360.0; }
	if (n % 3 = 1) { this.Rotation.y = 360.0; }
	if (n % 3 = 2) { this.Rotation.z = 360.0; }

	//key<<0.0>> { Spin<<10>>(this); }
}

timeline Scale(obj) {
	key<<0.5>> ElasticOut { obj.Scale -> vec3(0.49); }
	key<<1.0>> ElasticOut { obj.Scale -> vec3(0.3);	Scale<<1.0>>(obj); }
}

timeline Spin(obj) {
	key<<1.0>> {
		obj.Rotation -> obj.Rotation.zxy;
		Spin<<1.0>>(obj);
	}
}

timeline Main() {
	depth = 4;
	root = new Sphere(depth);

	Light0.Position = vec3(1.5,1.5,0);
	Light0.Color = vec3(1.0, 1.0, 1.0);
	Light0.Range = 200.0; 
	Light0.Intensity = 500.0;
	Light0.Visible = true;

	Light1.Position = vec3(-1.5,-1.5,0);
	Light1.Color = vec3(1.0, 1.0, 1.0);
	Light1.Range = 200.0; 
	Light1.Intensity = 500.0;
	Light1.Visible = true;
}